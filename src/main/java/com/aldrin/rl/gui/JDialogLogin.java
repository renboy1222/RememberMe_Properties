/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.aldrin.rl.gui;

import com.aldrin.rl.dao.impl.UserDAOImpl;
import com.aldrin.rl.model.User;
import com.aldrin.rl.util.LoginUser;
import com.formdev.flatlaf.FlatClientProperties;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;
import javax.swing.JOptionPane;

/**
 *
 * @author Java Programming with Aldrin
 */
public class JDialogLogin extends javax.swing.JDialog {

    /**
     * Creates new form JDialogLogin
     */
    
    private static final String PROPERTIES_FILE = System.getProperty("user.dir") + "/src/main/resources/login.properties";
    public JDialogLogin(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        jTextFieldUsername.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Username");
        jPasswordFieldPassword.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Password");

        //clear button
        jTextFieldUsername.putClientProperty(FlatClientProperties.TEXT_FIELD_SHOW_CLEAR_BUTTON, true);
//        jTextFieldUsername.putClientProperty(FlatClientProperties.TEXT_FIELD_LEADING_ICON, new FlatSVGIcon("svg/user.svg", 24, 24));

        //reveal button
        jPasswordFieldPassword.putClientProperty(FlatClientProperties.STYLE, "showRevealButton:true;" + "showCapsLock:true");
//        jPasswordFieldPassword.putClientProperty(FlatClientProperties.TEXT_FIELD_LEADING_ICON, new FlatSVGIcon("svg/key.svg", 24, 24));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldUsername = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPasswordFieldPassword = new javax.swing.JPasswordField();
        jCheckBoxRememberMe = new javax.swing.JCheckBox();
        jButtonLogin = new javax.swing.JButton();
        jLabelErrorMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Login");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Password");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 160, 440, 27));

        jTextFieldUsername.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        getContentPane().add(jTextFieldUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 115, 440, 32));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Username");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 90, 440, 27));

        jPasswordFieldPassword.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jPasswordFieldPassword.setPreferredSize(new java.awt.Dimension(64, 32));
        getContentPane().add(jPasswordFieldPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 185, 440, -1));

        jCheckBoxRememberMe.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jCheckBoxRememberMe.setText("Remember me");
        getContentPane().add(jCheckBoxRememberMe, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 230, 440, 30));

        jButtonLogin.setBackground(new java.awt.Color(4, 170, 109));
        jButtonLogin.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jButtonLogin.setForeground(new java.awt.Color(255, 255, 255));
        jButtonLogin.setText("Login");
        jButtonLogin.setPreferredSize(new java.awt.Dimension(72, 34));
        jButtonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoginActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 270, 440, -1));

        jLabelErrorMessage.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabelErrorMessage.setForeground(new java.awt.Color(204, 0, 0));
        jLabelErrorMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabelErrorMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 40, 440, 30));

        setSize(new java.awt.Dimension(472, 355));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoginActionPerformed
        login();
        
    }//GEN-LAST:event_jButtonLoginActionPerformed

 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLogin;
    private javax.swing.JCheckBox jCheckBoxRememberMe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelErrorMessage;
    private javax.swing.JPasswordField jPasswordFieldPassword;
    private javax.swing.JTextField jTextFieldUsername;
    // End of variables declaration//GEN-END:variables
    private UserDAOImpl userDAOImpl = new UserDAOImpl();
    
    
    private void login() {
        String username = jTextFieldUsername.getText();
        String password = new String(jPasswordFieldPassword.getPassword());
        boolean remember = jCheckBoxRememberMe.isSelected();

        // Validate login
        User user = new User();
        user.setUsername(username);
        user.setPassword(password);
        if(userDAOImpl.loginUser(user)!=null) {
            LoginUser logInUser = new LoginUser();
            user =userDAOImpl.loginUser(user);
            logInUser.setUser(user);
            if (remember) {
                saveLoginCredentials(username, password);
            } else {
                clearLoginCredentials();
            }
            dispose();
            // Proceed to next screen or perform other actions
        } else {
            jLabelErrorMessage.setText("Please check your username and password and try again.");
            jTextFieldUsername.putClientProperty("JComponent.outline", "error");
            jPasswordFieldPassword.putClientProperty("JComponent.outline", "error");
        }
    }

//    private boolean validateLogin(String username, String password) {
//        try {
//            String query = "SELECT * FROM users WHERE username=? AND password=?";
//            PreparedStatement statement = connection.prepareStatement(query);
//            statement.setString(1, username);
//            statement.setString(2, password);
//            ResultSet resultSet = statement.executeQuery();
//            return resultSet.next();
//        } catch (SQLException e) {
//            e.printStackTrace();
//            return false;
//        }
//    }

    private void saveLoginCredentials(String username, String password) {
        try {
            Properties properties = new Properties();
            properties.setProperty("username", username);
            properties.setProperty("password", password);
            File file = new File(PROPERTIES_FILE);
            FileOutputStream fileOut = new FileOutputStream(file);
            properties.store(fileOut, "Login Credentials");
            fileOut.close();
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error saving login credentials: " + e.getMessage());
        }
    }

    private void clearLoginCredentials() {
        try {
            File file = new File(PROPERTIES_FILE);
            if (file.exists()) {
                file.delete();
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error clearing login credentials: " + e.getMessage());
        }
    }

}
